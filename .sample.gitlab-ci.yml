image: DOCKERNODETOKEN

before_script:
  # IMPORTANT: This section is copied from make deploy and make dockerfile
  # Dockerfile section
  - echo "export HOST_SSH_PRIVATE=\"$HOST_SSH_PRIVATE\"" >> .deploy
  - echo "export HOST_SSH_PUBLIC=\"$HOST_SSH_PUBLIC\"" >> .deploy
  - apt-get update
  - apt-get install -y gettext-base rsync
  - mkdir -p ~/.ssh
  - echo "Setting up:$HOST_SSH_PUBLIC"
  - echo "$HOST_SSH_PUBLIC" > ~/.ssh/id_rsa.pub
  - echo "$HOST_SSH_PRIVATE" > ~/.ssh/id_rsa
  - printf "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config
  - chmod 600 ~/.ssh/*
  - which ssh-agent || ( apt-get install -qq openssh-client )
  - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
  - ssh-keyscan -t rsa -p 2212 repo.htk.me >> ~/.ssh/known_hosts
  - ssh-keyscan -p 2212 repo.htk.me >> ~/.ssh/known_hosts
  - printf "Host deploy\n${SSH_HOST_CONFIG}" >> ~/.ssh/config
  - if [ ! "x$DEBUG" = "x" ] ; then echo "Debugging. docker exec -ti now"; tail -f /var/log/*.log; fi
  - bash -c ". .deploy && if [[ \"x$DEBUG\" != \"x\" ]]; then echo \"Skipping npm install\" ; else echo \"\$BUILDSCRIPT\" && eval \$BUILDSCRIPT; fi"
  - if [ ! "x$DEBUG" = "x" ] ; then echo "Skipping git submodule update" ; else git submodule update --init --recursive --remote && git submodule sync --recursive ; fi; exit 0

  # Next will be deploy script section
  - echo "SSH_PRIVATE_KEY:$SSH_PRIVATE_KEY"
  - which ssh-agent || ( apt-get install -qq openssh-client )
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # THIS IS DIFFERENT. Leave it
  - export RELOADCOMMAND="RELOADCOMMANDTOKEN"
  - export INSTANCE="INSTANCETOKEN"
  - export DEPLOYDIR="DEPLOYDIRTOKEN"

#
deploy_staging:
  type: deploy
  environment:
    name: staging
  script:
    - make -f ./node_modules/gitlab-ci-extend/Makefile deploy
  only:
    - 1.x
